import { converterData, formatCPF, formatCEP } from '../../utils/fuctions';

export const Associado = (data) => ({
    id: data?.id,
    nome: data?.nome,
    cpf: formatCPF(data?.cpf),
    rg: data?.rg,
    data_nascimento: converterData(data?.dataNascimento),
    n_contrato: data?.contrato,
    genero: data?.sexo,
    religiao: data?.religiao,
    uf: data?.uf,
    naturalidade: data?.naturalidade,
    nacionalidade: data?.naciolidade,
    profissao: data?.profissao,
    estado_civil: data?.estadoCivil,
    data_contrato: converterData(data?.dataContrato),
    is_carencia: data?.carencia,
    data_inicio_carencia: converterData(data?.dataInicioCarencia),
    data_final_carencia: converterData(data?.dataFimCarencia),
    is_cremacao: data?.cremacao,
    data_cremacao: converterData(data?.dataCremacao),
    cep_residencial: data?.cepResidencial ? formatCEP(data?.cepResidencial) : '',
    uf_residencial: data?.ufResidencial,
    municipio_residencial: data?.municipioResidencial,
    bairro_residencial: data?.bairroResidencial,
    quadra_residencial: data?.quadraResidencial,
    lote_residencial: data?.loteResidencial,
    numero_residencial: data?.numeroResidencial,
    tipo_endereco_residencial: data?.tipoEnderecoResidencial,
    rua_residencial: data?.ruaResidencial,
    complemento_residencial: data?.complementoResidencial,
    is_endereco_comercial: data?.enderecoComercial,
    cep_comercial: data?.cepComercial ? formatCEP(data?.cepComercial) : '',
    uf_comercial: data?.ufComercial,
    municipio_comercial: data?.municipioComercial,
    bairro_comercial: data?.bairroComercial,
    quadra_comercial: data?.quadraComercial,
    lote_comercial: data?.loteComercial,
    numero_comercial: data?.numeroComercial,
    tipo_endereco_comercial: data?.tipoEnderecoComercial,
    rua_comercial: data?.ruaComercial,
    complemento_comercial: data?.complementoComercial,
    data_pagamento: converterData(data?.dataPagamento),
    data_primeira_parcela: converterData(data?.dataPrimeiraParcela),
    ordem_rota: data?.ordemRota,
    plano: data?.plano,
    regiao: data?.regiao,
    is_transferido: data?.transferido,
    is_pagou_adesao: data?.pagouAdesao,
    ultimo_pagamento: converterData(data?.ultimoPagamento),
    status: data?.status,
    dia_pagamento: data?.diaPagamento,
    situacao: data?.situacao,
    tipo_associado: data?.tipoAssociado,
    dependentes: data?.dependentes.map(dependente => ({
        id: dependente?.id,
        nome: dependente?.nome,
        parentesco: dependente?.parentesco,
        data_nascimento: converterData(dependente?.dataNascimento),
        tipo: dependente?.tipo,
        status: dependente?.status,
        adicao: dependente?.adicao,
        data_filiacao: converterData(dependente?.dataFiliacao),
        cpf: dependente?.cpf ? formatCPF(dependente?.cpf) : '',
        data_falecimento: converterData(dependente?.dataFalecimento),
        modalidade: dependente?.modalidade,
        porte: dependente?.porte,
        raca: dependente?.raca,
        especie: dependente?.especie,
        altura: dependente?.altura,
        cor: dependente?.cor,
        peso: dependente?.peso,
    })),
    historico_recebimento: data?.historicoRecebimento.map(historico => ({
        n_parcela: historico?.id,
        data_vencimento: converterData(historico?.data),
        valor: historico?.valor,
        status: historico?.status,
    })),
    contatos: data?.contatos.map(contato => ({
        id: contato?.id,
        tipo: contato?.tipo,
        valor: contato?.valor,
    })),
    observacao: data?.ocorrencias.map(obs => ({
        id: obs?.id,
        titulo: obs?.titulo,
        categoria: obs?.categoria,
        subcategoria: obs?.subcategoria,
        usuario: obs?.usuario,
        descricao: obs?.descricao,
        data_criacao: obs?.data
    })),
    historico_funerario: data?.historicoFunerario.map(hist => ({
        id: hist?.id,
        nome: hist?.nome,
        data_nascimento: hist?.dataNascimento,
        data_falecimento: hist?.dataFalecimento,
        plano: hist?.plano,
        parentesco: hist?.parentesco,
        data_cremacao: hist?.dataCremacao
    })),
    historico_clinico: data?.historicoClinico.map(hist => ({
        id: hist?.id,
        nome: hist?.nome,
        data_nascimento: hist?.dataNascimento,
        procedimento: hist?.procedimento,
        data_procedimento: hist?.dataProcedimento,
        parentesco: hist?.parentesco,
        status: hist?.status
    })),
    historico_pet: data?.historicoPET.map(hist => ({
        id: hist?.id,
        nome: hist?.nome,
        data_nascimento: hist?.dataNascimento,
        procedimento: hist?.procedimento,
        data_procedimento: hist?.dataProcedimento,
        data_falecimento: hist?.dataFalecimento,
        status: hist?.status
    })),
})